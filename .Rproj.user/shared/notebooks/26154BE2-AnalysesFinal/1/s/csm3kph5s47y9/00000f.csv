"0",""
"0","# Defining common elements"
"0","common_within_person_effects <- c("
"0","  '(Intercept)',"
"0","  '---WITHIN-PERSON EFFECTS---',"
"0","  'PSC_agent_cw', "
"0","  'NSC_agent_cw', "
"0","  'sbyday', "
"0","  'weeknd2', "
"0","  'weartime_cw'"
"0",")"
"0",""
"0","common_between_person_effects <- c("
"0","  'PSC_agent_cb', "
"0","  'NSC_agent_cb', "
"0","  'weartime_cb'"
"0",")"
"0",""
"0","common_random_effects <- c("
"0","  'Std.Dev.(Intercept)|CoupleID', "
"0","  'Std.Dev.PSC_agent_cw|CoupleID', "
"0","  'Std.Dev.NSC_agent_cw|CoupleID', "
"0","  'Cor.PSC_agent_cw.(Intercept)|CoupleID', "
"0","  'Cor.NSC_agent_cw.(Intercept)|CoupleID', "
"0","  'Cor.NSC_agent_cw.PSC_agent_cw|CoupleID'"
"0",")"
"0",""
"0","common_model_info <- c("
"0","  'Within-group standard error', "
"0","  'dispersion', "
"0","  'AR1'"
"0",")"
"0",""
"0","# Order for report"
"0","order_rep <- c("
"0","  common_within_person_effects, "
"0","  '---BETWEEN-PERSON EFFECTS---',"
"0","  common_between_person_effects, "
"0","  '---RANDOM-EFFECTS---',"
"0","  common_random_effects,"
"0","  '---------MODEL INFO---------',"
"0","  common_model_info"
"0",")"
"0",""
"0","# Order for sensitivity analysis"
"0","order_sens <- c("
"0","  common_within_person_effects, "
"0","  'Sup_agent_cw', "
"0","  'Sup_target_cw', "
"0","  'time_spent_cw',"
"0","  'intention_agent_lagged_cw',"
"0","  'intention_target_lagged_cw',"
"0","  'self_efficacy_agent_lagged_cw',"
"0","  'self_efficacy_target_lagged_cw',"
"0","  'plan_agent_lagged_cw',"
"0","  'plan_target_lagged_cw',"
"0","  'risk_perception_agent_cw', "
"0","  'risk_perception_target_cw',"
"0","  'perceived_benfeits_agent_cw',"
"0","  'perceived_benfeits_target_cw',"
"0","  '---BETWEEN-PERSON EFFECTS---',"
"0","  common_between_person_effects, "
"0","  'Sup_agent_cb', "
"0","  'Sup_target_cb', "
"0","  'time_spent_cb', "
"0","  'intention_agent_lagged_cb',"
"0","  'intention_target_lagged_cb',"
"0","  'self_efficacy_agent_lagged_cb',"
"0","  'self_efficacy_target_lagged_cb',"
"0","  'plan_agent_lagged_cb',"
"0","  'plan_target_lagged_cb',"
"0","  'risk_perception_agent_cb', "
"0","  'risk_perception_target_cb',"
"0","  'perceived_benfeits_agent_cb',"
"0","  'perceived_benfeits_target_cb',"
"0","  'reldur_cb', "
"0","  'page', "
"0","  'sage', "
"0","  'pbmi', "
"0","  'sbmi', "
"0","  'sb0kih01',"
"0","  'sb0sex01',"
"0","  'pb0sex01',"
"0","  'groupdyadic action control',"
"0","  'groupindividual action control',"
"0","  '---RANDOM-EFFECTS---',"
"0","  common_random_effects,"
"0","  '---------MODEL INFO---------',"
"0","  common_model_info"
"0",")"
"0",""
"0",""
"0",""
"0","full_report <- function(model, order) {"
"0","  if (class(model) == 'glmmTMB') {"
"0","    return(report_glmmTMB(model, order))"
"0","  } else {"
"0","    return(report_nlme(model, order))"
"0","  }"
"0","}"
"0",""
"0",""
"0","report_glmmTMB <- function(model, order) {"
"0","  # Extracting model parameters and creating the initial dataframe"
"0","  rep_df <- as.data.frame(model_parameters(model, exponentiate = TRUE))[,c('Parameter', 'Coefficient', 'SE', 'p', 'CI_low', 'CI_high', 'Effects', 'Component')]"
"0","  "
"0","  # Removing rows where the Parameter includes 'factor'"
"0","  rep_df <- rep_df[rep_df$Effects != 'random',]"
"0","  "
"0","  "
"0","  # Adding confidence intervals"
"0","  "
"0","  int <- as.data.frame(confint(model))"
"0","  "
"0","  intt <- int[!grepl('factor', rownames(int)),]"
"0","  intervals <- intt[grepl('CoupleID', rownames(intt)),]"
"0","  "
"0","  "
"0","  df_intervals <- data.frame('Parameter' = rownames(intervals),"
"0","                             'Coefficient' = intervals$Estimate,"
"0","                             'SE' = NA, "
"0","                             'CI_low' = intervals$`2.5 %`,"
"0","                             'CI_high' = intervals$`97.5 %`, "
"0","                             'p' = NA, "
"0","                             'Effects' = 'random', "
"0","                             'Component' = 'conditional')"
"0","  "
"0","  rep_df <- rbind(rep_df, df_intervals)"
"0","  "
"0","  "
"0","  # Extracting the AR1 coefficient from the model"
"0","  ar1 <- capture.output(summary(model)$varcor)"
"0","  if (length(grep(""ar1"", ar1)) > 0) {"
"0","    ar1_value <- as.numeric(strsplit(ar1[grep(""ar1"", ar1)], ""\\(ar1\\)"")[[1]][2])"
"0","  } else {"
"0","    ar1_value <- NA"
"0","  }"
"0","  "
"0","  "
"0","  # Combining and reporting"
"0","  "
"0","  rep_df <- rep_df %>% "
"0","    add_row(Parameter = '---WITHIN-PERSON EFFECTS---') %>%"
"0","    add_row(Parameter = '---BETWEEN-PERSON EFFECTS---') %>%"
"0","    add_row(Parameter = '---RANDOM-EFFECTS---') %>%"
"0","    add_row(Parameter = 'Within-group standard error') %>%"
"0","    add_row(Parameter = '---------MODEL INFO---------') %>%"
"0","    add_row(Parameter = 'AR1', Coefficient = ar1_value)"
"0","    "
"0","  rep_df"
"0","  rep_df[rep_df$Component == 'dispersion' & rep_df$Parameter == '(Intercept)', ]$Parameter <- 'dispersion'"
"0","  "
"0",""
"0","  # Reorder the dataframe based on 'order'"
"0","  rep_df$Parameter[rep_df$Parameter == ""sbwwear_cw""] <- 'weartime_cw'"
"0","  rep_df$Parameter[rep_df$Parameter == ""sbwwear_cb""] <- 'weartime_cb'"
"0","  rep_df$Parameter[rep_df$Parameter == ""pbwwear_cw""] <- 'weartime_cw'"
"0","  rep_df$Parameter[rep_df$Parameter == ""pbwwear_cb""] <- 'weartime_cb'"
"0","  "
"0","  "
"0","  rep_df <- rep_df[match(order, rep_df$Parameter),]"
"0","  "
"0","  # Call function for rounding and adding stars"
"0","  rep_df <- process_coefficients(rep_df)"
"0","  "
"0","  "
"0","  return(rep_df)"
"0","}"
"0",""
"0",""
"0",""
"0","report_nlme <- function(model, order) {"
"0","  # Extracting fixed effects"
"0","  rep_df <- as.data.frame(model_parameters(model))[,c('Parameter', 'Coefficient', 'SE', 'p', 'CI_low', 'CI_high', 'Effects')]"
"0","  "
"0","  rep_df <- tryCatch({"
"0","  "
"0","      # Confidence intervals of random effects"
"0","      int <- intervals(model)"
"0","      int_rand <- as.data.frame(int$reStruct)"
"0","      "
"0","      # add AR1"
"0","      int_ar1 <- as.data.frame(int$corStruct)"
"0","      "
"0","      if (nrow(int_ar1) > 0) {"
"0","        rownames(int_ar1) <- c('AR1')"
"0","        colnames(int_ar1) <- colnames(int_rand)"
"0","        int_rand <- rbind(int_rand, int_ar1)"
"0","      } else {"
"0","        # Create a row with NA values"
"0","        na_row <- setNames(data.frame(matrix(NA, ncol = ncol(int_rand), nrow = 1)), colnames(int_rand))"
"0","        rownames(na_row) <- 'AR1'"
"0","        int_rand <- rbind(int_rand, na_row)"
"0","      }"
"0","      "
"0","      # Add Confint for sigma"
"0","      int_resid <- as.data.frame(int$sigma)"
"0","      "
"0","      int_rand[nrow(int_rand) + 1,] <- c(int_resid[1, 1], int_resid[2, 1], int_resid[3, 1])"
"0","      rownames(int_rand)[nrow(int_rand)] <- 'Within-group standard error'"
"0","    "
"0","      "
"0","    "
"0","      "
"0","      # Construct df"
"0","      "
"0","      int_df <- data.frame("
"0","        Parameter = rownames(int_rand),"
"0","        Coefficient = int_rand$CoupleID.est.,"
"0","        SE = NA,"
"0","        CI_low = int_rand$CoupleID.lower,"
"0","        CI_high = int_rand$CoupleID.upper,"
"0","        p = NA, "
"0","        Effects = 'random'"
"0","      )"
"0","      "
"0","      # Combine"
"0","      rep_df <- rep_df[rep_df$Effects != 'random',]"
"0","      "
"0","      rep_df <- rbind(rep_df, int_df)"
"0","      rep_df$Parameter[rep_df$Parameter == 'sd((Intercept))'] <- 'Std.Dev.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'sd(PSC_agent_cw)'] <- 'Std.Dev.PSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'sd(NSC_agent_cw)'] <- 'Std.Dev.NSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'cor((Intercept),PSC_agent_cw)'] <- 'Cor.PSC_agent_cw.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'cor((Intercept),NSC_agent_cw)'] <- 'Cor.NSC_agent_cw.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'cor(PSC_agent_cw,NSC_agent_cw)'] <- 'Cor.NSC_agent_cw.PSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'cor(NSC_agent_cw,PSC_agent_cw)'] <- 'Cor.NSC_agent_cw.PSC_agent_cw|CoupleID'"
"0","      rep_df"
"0","    }, error = function(e) {"
"0","      rep_df$Parameter[rep_df$Parameter == ""SD (Intercept)""] <- 'Std.Dev.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'SD (PSC_agent_cw)'] <- 'Std.Dev.PSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'SD (NSC_agent_cw)'] <- 'Std.Dev.NSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'Cor (Intercept~PSC_agent_cw)'] <- 'Cor.PSC_agent_cw.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'Cor (Intercept~NSC_agent_cw)'] <- 'Cor.NSC_agent_cw.(Intercept)|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'Cor (PSC_agent_cw~NSC_agent_cw)'] <- 'Cor.NSC_agent_cw.PSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'Cor (NSC_agent_cw~PSC_agent_cw)'] <- 'Cor.NSC_agent_cw.PSC_agent_cw|CoupleID'"
"0","      rep_df$Parameter[rep_df$Parameter == 'SD (Observations)'] <- 'Within-group standard error'"
"0","      rep_df"
"0","    }"
"0","  )"
"0","  "
"0","  # Finishing touches"
"0","  rep_df <- rep_df %>% "
"0","    add_row(Parameter = '---WITHIN-PERSON EFFECTS---') %>%"
"0","    add_row(Parameter = '---BETWEEN-PERSON EFFECTS---') %>%"
"0","    add_row(Parameter = '---RANDOM-EFFECTS---') %>%"
"0","    add_row(Parameter = '---------MODEL INFO---------') %>%"
"0","    add_row(Parameter = 'dispersion') %>%"
"0","    add_row(Parameter = 'sbwwear_cb') %>%"
"0","    add_row(Parameter = 'sbwwear_cw')"
"0","  "
"0","  "
"0","  # Reorder the dataframe based on 'order'"
"0","  rep_df <- rep_df[match(order, rep_df$Parameter),]"
"0","  "
"0","  # Call function for rounding and adding stars"
"0","  rep_df <- process_coefficients(rep_df)"
"0","  "
"0","  return(rep_df)"
"0","}"
"0",""
"0",""
"0",""
"0",""
"0",""
"0","process_coefficients <- function(df) {"
"0","  # Round"
"0","  df[, c(2, 3, 5, 6)] <- round(df[, c(2, 3, 5, 6)], 2)"
"0","  df[, 4] <- round(df[, 4], 3)"
"0",""
"0","  # Add stars"
"0","  df$Coefficient <- as.character(sprintf(""%.2f"", df$Coefficient))"
"0","  df$Coefficient <- ifelse(is.na(df$p), df$Coefficient,"
"0","                           ifelse(df$p < 0.001, paste0(df$Coefficient, ""***""),"
"0","                                  ifelse(df$p < 0.01, paste0(df$Coefficient, ""**""),"
"0","                                         ifelse(df$p < 0.05, paste0(df$Coefficient, ""*""), "
"0","                                                df$Coefficient))))"
"0","  return(df)"
"0","}"
"0",""
"0",""
"0",""

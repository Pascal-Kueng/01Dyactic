"0",""
"0","# Function to compute within- and between- omega"
"0","omega_multilevel <- function(data, variables, cluster_var = ""CoupleID"", fiml = TRUE, ci = 0.95) {"
"0","  #' This function computes omega reliability coefficients for multilevel data."
"0","  #' It fits a two-level CFA model using lavaan and calculates omega coefficients for both within-cluster and between-cluster levels."
"0","  #' "
"0","  #' Inputs:"
"0","  #' - data: A data frame containing the variables for analysis."
"0","  #' - variables: A character vector of variable names to include in the model."
"0","  #' - cluster_var: Name of the clustering variable (default: ""CoupleID"")."
"0","  #' - fiml: If TRUE, uses Full Information Maximum Likelihood for missing data (default: TRUE)."
"0","  #' - ci: Confidence level for intervals (default: 0.95)."
"0","  #' "
"0","  #' Returns a list containing:"
"0","  #' - omegas: Data frame with omega estimates, standard errors, and confidence intervals."
"0","  #' - fit_indices: Model fit indices (chi-square, df, p-value, CFI, TLI, RMSEA, SRMR)."
"0","  #' - model: The lavaan model specification."
"0","  #' - full_summary: Full summary output from the lavaan model."
"0","  #' "
"0","  #' The function uses robust maximum likelihood estimation (MLR) and computes confidence intervals using the delta method."
"0","  #' At least two variables are required for the model.  "
"0","  # Error checking"
"0","  if(length(variables) < 2) {"
"0","    stop(""At least two variables are required for the model."")"
"0","  }"
"0","  "
"0","  # Create the model string"
"0","  model_parts <- lapply(seq_along(variables), function(i) {"
"0","    var <- variables[i]"
"0","    c("
"0","      sprintf(""f_within =~ wl%d*%s"", i, var),"
"0","      sprintf(""%s ~~ wr%d*%s"", var, i, var),"
"0","      sprintf(""f_between =~ bl%d*%s"", i, var),"
"0","      sprintf(""%s ~ 1"", var),"
"0","      sprintf(""%s ~~ br%d*%s"", var, i, var),"
"0","      sprintf(""wr%d > 0"", i),"
"0","      sprintf(""br%d > 0"", i)"
"0","    )"
"0","  })"
"0","  "
"0","  model <- c("
"0","    ""# Within level"","
"0","    ""level: 1"","
"0","    unlist(lapply(model_parts, `[`, 1:2)),"
"0","    """","
"0","    ""# Between level"","
"0","    ""level: 2"","
"0","    unlist(lapply(model_parts, `[`, 3:5)),"
"0","    """","
"0","    ""# Defined parameters for omega calculation"","
"0","    sprintf(""num_within := (%s)^2"", paste0(""wl"", seq_along(variables), collapse = "" + "")),"
"0","    sprintf(""denom_within := (%s)^2 + (%s)"", "
"0","            paste0(""wl"", seq_along(variables), collapse = "" + ""),"
"0","            paste0(""wr"", seq_along(variables), collapse = "" + "")),"
"0","    ""omega_within := num_within / denom_within"","
"0","    """","
"0","    sprintf(""num_between := (%s)^2"", paste0(""bl"", seq_along(variables), collapse = "" + "")),"
"0","    sprintf(""denom_between := (%s)^2 + (%s)"", "
"0","            paste0(""bl"", seq_along(variables), collapse = "" + ""),"
"0","            paste0(""br"", seq_along(variables), collapse = "" + "")),"
"0","    ""omega_between := num_between / denom_between"","
"0","    """","
"0","    ""# Constraints"","
"0","    unlist(lapply(model_parts, `[`, 6:7))"
"0","  )"
"0","  "
"0","  model <- paste(model, collapse = ""\n"")"
"0","  "
"0","  # Fit the model"
"0","  fit <- tryCatch({"
"0","    lavaan::sem("
"0","      model, "
"0","      data = data, "
"0","      cluster = cluster_var, "
"0","      estimator = ""MLR"", "
"0","      missing = if(fiml) ""fiml"" else ""listwise"", "
"0","      std.lv = TRUE, "
"0","      auto.fix.first = FALSE, "
"0","      auto.var = FALSE,"
"0","      se = ""robust"""
"0","    )"
"0","  }, error = function(e) {"
"0","    stop(""Error in fitting the model: "", e$message)"
"0","  })"
"0","  "
"0","  # Extract results"
"0","  summary_fit <- summary(fit)"
"0","  omegas <- summary_fit$pe[summary_fit$pe$label %in% c('omega_within', 'omega_between'), ]"
"0","  "
"0","  # Calculate confidence intervals"
"0","  z_score <- qnorm((1 + ci) / 2)"
"0","  omegas$ci.lower <- omegas$est - z_score * omegas$se"
"0","  omegas$ci.upper <- omegas$est + z_score * omegas$se"
"0","  "
"0","  # Select relevant columns"
"0","  omegas <- omegas[, c('label', 'est', 'se', 'ci.lower', 'ci.upper')]"
"0","  rownames(omegas) <- omegas$label"
"0","  omegas$label <- NULL"
"0","  "
"0","  # Ensure CI bounds are within [0, 1]"
"0","  omegas$ci.lower <- pmax(0, pmin(1, omegas$ci.lower))"
"0","  omegas$ci.upper <- pmax(0, pmin(1, omegas$ci.upper))"
"0","  "
"0","  fit_indices <- fitMeasures(fit, c(""chisq"", ""df"", ""pvalue"", ""cfi"", ""tli"", ""rmsea"", ""srmr""))"
"0","  "
"0","  # Return results"
"0","  list("
"0","    omegas = omegas,"
"0","    fit_indices = fit_indices,"
"0","    model = model,"
"0","    full_summary = summary_fit"
"0","  )"
"0","}"
"0",""
"0",""

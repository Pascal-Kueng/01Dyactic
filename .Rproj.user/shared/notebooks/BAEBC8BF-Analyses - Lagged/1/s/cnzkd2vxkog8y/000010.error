{"frames":[{"func":"check_model(posaff_agent_lagged)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_model.default(posaff_agent_lagged)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(if (minfo$is_bayesian) {\n    suppressWarnings(.check_assumptions_stan(x, ...))\n} else if (minfo$is_linear) {\n    suppressWarnings(.check_assumptions_linear(x, minfo, check,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(.check_assumptions_linear(x, minfo, check, residual_type, \n    verbose, ...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".check_assumptions_linear(x, minfo, check, residual_type, verbose, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".safe(check_outliers(model, method = \"cook\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(code, error = function(e) on_error)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_outliers(model, method = \"cook\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_outliers.lme(model, method = \"cook\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_outliers.default(x, method = method, threshold = threshold, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".influential_obs(x, threshold = unlist(thresholds))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".safe(.diag_influential_obs(x, threshold = threshold))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(code, error = function(e) on_error)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".diag_influential_obs(x, threshold = threshold)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stats::influence(model, do.coef = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"influence.lme(model, do.coef = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(unique.del, deleteGroup)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(update(model, data = data, subset = .groups != \n    del, control = nlme::lmeControl(returnObject = TRUE)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"update(model, data = data, subset = .groups != del, control = nlme::lmeControl(returnObject = TRUE))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"update.lme(model, data = data, subset = .groups != del, control = nlme::lmeControl(returnObject = TRUE))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(call, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(call, parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lme.formula(fixed = Paff_agent_next_day ~ Paff_agent + PSC_agent_cw + \n    NSC_agent_cw + sbyday + weeknd2 + PSC_agent_cb + NSC_agent_cb, \n    data = data, random = ~1 | CoupleID, correlation = corAR1(form = ~1 | \n        CoupleID), na.action = na.omit, control = nlme::lmeControl(returnObject = TRUE),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nlminb(c(oldPars), function(lmePars) -logLik(lmeSt, lmePars), \n    control = control)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"objective(.par, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"logLik(lmeSt, lmePars)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"logLik.lmeStruct(lmeSt, lmePars)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`coef<-`(`*tmp*`, value = Pars)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`coef<-.modelStruct`(`*tmp*`, value = Pars)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no applicable method for 'family' applied to an object of class \"lme\""}